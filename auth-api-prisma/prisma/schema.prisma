generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model temp_users {
  id                 Int                 @id @default(autoincrement())
  name               String              @db.VarChar(190)
  email              String              @unique @db.VarChar(190)
  password           String              @db.VarChar(255)
  mobile_no          String              @db.VarChar(20)
  created_at         DateTime?           @db.Timestamp(6)
  updated_at         DateTime?           @db.Timestamp(6)
  email_otp          String?             @db.VarChar(10)
  mobile_otp         String?             @db.VarChar(10)
  is_email_verified  Boolean?            @default(false)
  is_mobile_verified Boolean?            @default(false)
  otp_verifications  otp_verifications[]
}

model users {
  id         Int       @id @default(autoincrement())
  uuid       Int       @unique
  name       String    @db.VarChar(190)
  email      String    @unique @db.VarChar(190)
  password   String    @db.VarChar(255)
  mobile_no  String    @db.VarChar(20)
  status     String    @db.VarChar(50)
  otp_status String    @db.VarChar(50)
  role       String    @db.VarChar(50)
  created_at DateTime? @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)
  wallets    wallets?
}

model wallets {
  id                Int       @id @default(autoincrement())
  user_id           Int       @unique
  balance           Float?    @default(0.0)
  lien_balance      Float?    @default(0.0)
  free_balance      Float?    @default(100.0)
  balance_expire_at DateTime  @db.Timestamp(6)
  created_at        DateTime? @db.Timestamp(6)
  updated_at        DateTime? @db.Timestamp(6)
  users             users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")
}

model login_history {
  id               BigInt    @id @default(autoincrement())
  device           String?   @db.VarChar(190)
  operating_system String?   @db.VarChar(190)
  browser          String?   @db.VarChar(190)
  ip_address       String?   @db.VarChar(50)
  latitude         Decimal?  @db.Decimal(10, 7)
  longitude        Decimal?  @db.Decimal(10, 7)
  location         String?
  status           String?   @db.VarChar(20)
  user_agent       String?
  created_at       DateTime? @db.Timestamp(6)
  updated_at       DateTime? @db.Timestamp(6)
  user_id          Int?
}

model otp_verifications {
  id          Int         @id @default(autoincrement())
  otp         Int
  expires_at  DateTime    @db.Timestamp(6)
  is_verified Boolean?    @default(false)
  created_at  DateTime    @db.Timestamp(6)
  updated_at  DateTime?   @db.Timestamp(6)
  user_id     Int?
  type        String?     @db.VarChar(10)
  temp_user   temp_users? @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_temp_user")

  @@index([user_id, type], map: "idx_user_id_type")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model product_categories {
  id         BigInt     @id @default(autoincrement())
  name       String     @unique @db.VarChar(100)
  slug       String     @unique @db.VarChar(100)
  status     String?    @default("Active") @db.VarChar(8)
  created_at DateTime?  @db.Timestamp(6)
  updated_at DateTime?  @db.Timestamp(6)
  products   products[]
}

model product_pricing {
  id         BigInt    @id @default(autoincrement())
  product_id BigInt
  price      Decimal   @db.Decimal(10, 2)
  currency   String?   @default("INR") @db.VarChar(10)
  created_at DateTime? @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)
  products   products  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model products {
  id                 BigInt             @id @default(autoincrement())
  category_id        BigInt
  name               String             @db.VarChar(100)
  slug               String             @unique @db.VarChar(100)
  description        String?
  icon               String?            @db.VarChar(255)
  status             String?            @default("Active") @db.VarChar(8)
  created_at         DateTime?          @db.Timestamp(6)
  updated_at         DateTime?          @db.Timestamp(6)
  product_pricing    product_pricing[]
  product_categories product_categories @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
